
Algunos comandos y sus funciones:

git init : Empieza en tu carpeta un repositorio para guardar los cambios.
git add “nombre del archivo” : Agrega ese archivo o cambio al "Staging Area"
git commit -m “Versión 1” : Agrega finalmente el cambio realizado y le agrega un mensaje con -m
git add . : Agrega todos los archivos a ese Staging Area
git commit -m “Cambios a v1” : Aplica los cambios realizados.
git status : Muestra el estado de tu respositorio
git show : Muestra el historico de los cambios hechos
git log “nombre del archivo” : Muestra el historial de ese archivo
git push : Envia hacia un repositorio remoto
git pull : Trae de un repositorio remoto a tu local


0 ----------------------Basic :

1 -------------> gen shh key :
# go cmd and:
> ssh-keygen -t ed25519 -C "your@email.address"

1 -------------> git clone :
# where you stay in the directory clone this repository:
> git clone https://github.com/UCSP-CS/dbp-code-sample

1 -------------> git init :
# github will know that it will be you repository:
> git init 

1 -------------> git remote :

> git remote git remote add origin https://github.com/TucspDretcm/homework-hmtl-1.git

# to do changes
> git branch -M main
> git add <somedocument.(txt,md,html, and so on)>
> git commit -m <"comentary">
> git push    /*options: > git push origin main */

1 -------------> get user and email : set :

# get:
git config --global user.name
git config --global user.email

# set:
git config --global user.name <name github>
git config --global user.email <email hithub>





1 --------------->>> fork :

1. goo click to code
2. select SSH and copy it
3. put in the bash terminal git clone git@github ....

# show all files or folders of current path:
ls

# show you connection user if you is connect:
git remote -v

1 --------------->>> ssh :

# 1 step
ssh-keygen -t ed25519 -C "[tu correo]"
cat [url donde se creó el archivo termina en .pub]

# 2 step
git clone [url shh copiado de github donde dice Code]

# 3 step

1 --------------->>> create commit :

#create
touch hola.txt

# state of git or file
git status


# go into the file:
vim hola.txt  # vim is my editor, chose you editor according the installation.

# show the content
cat hola.txt

#  commit:
git add hola.txt # for save the txt in the repository.

git commit -m "anadido proyecto base"

1 --------------->>> save changues :
# record that you ust be in the path of folder git.

git add .
git add [cambio espesifico] # example : git add scripts/jotaro.py
git commit -m "actualize el cambio"
git push
git push -u origin [branch]  # git push -u origin main

1 --------------->>> git pull

# git pull es un comando de Git utilizado para actualizar la versión local de un repositorio desde otro remoto. Es uno de los cuatro comandos que solicita interacción de red por Git. Por default, git pull hace dos cosas. Actualiza 
# las referencias de rama remota para todas las demás ramas.

git pull

1 --------------->>> upstream
#add new brach
git remote add upstream git@github.com:Alfred-CQ/Git_Taller_Grupo11.git

# delete:
git remote remove upstream

1 --------------->>>
1 --------------->>>
1 --------------->>>
1 --------------->>>
1 --------------->>>
1 --------------->>>

1 --------------->>>
1 --------------->>>
1 --------------->>>

1 --------------->>>
1 --------------->>>
1 --------------->>>
1 --------------->>>
1 --------------->>>
